%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.3 (Build 14D136) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 3450 888
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 3450 888
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
12 w
0.60000002 i
/Cs1 SC
0.49415046 0.8262341 0.12987727 sc
q
0 888 m
3450 888 l
3450 0 l
0 0 l
h
0 888 m
W*
0 0 3450 888 rc
3 0 0 -3 24 858 cm
199.24434 22.45857 m
203.40433 18.215704 l
183.53355 6.6247039 160.5197 0 135.98877 0 c
60.884247 0 0 62.097031 0 138.6976 c
0 215.29817 60.884247 277.3952 135.98877 277.3952 c
211.09329 277.3952 271.97754 215.29817 271.97754 138.6976 c
271.97754 121.68456 268.97418 105.38697 263.47876 90.326248 c
263.47876 90.326248 l
259.05103 94.842163 l
263.75449 108.57264 266.31134 123.33058 266.31134 138.6976 c
266.31134 212.10648 207.96394 271.61615 135.98877 271.61615 c
64.013603 271.61615 5.6661987 212.10648 5.6661987 138.6976 c
5.6661987 65.288719 64.013603 5.7790666 135.98877 5.7790666 c
158.94368 5.7790666 180.51242 11.832099 199.24434 22.45857 c
199.24434 22.45857 l
h
199.24434 22.45857 m
S
Q
0.49415046 0.8262341 0.12987727 sc
q
0 888 m
3450 888 l
3450 0 l
0 0 l
h
0 888 m
W*
334.22437 339.86554 m
336.66144 342.35114 l
819.9057 835.22137 l
838.58398 854.27173 l
875.94055 816.17102 l
857.26227 797.12067 l
374.01801 304.25046 l
371.58093 301.76483 l
334.22437 263.66412 l
315.54608 282.71448 l
180.70575 420.24078 l
162.02745 439.29114 l
199.38403 477.39185 l
218.06232 458.34149 l
334.22437 339.86554 l
334.22437 339.86554 l
h
334.22437 339.86554 m
W*
0 0 3450 888 rc
147.02745 869.27173 m
890.94055 869.27173 l
890.94055 248.66412 l
147.02745 248.66412 l
h
f
Q
0.36862746 0.36862746 0.36862746 sc
q
0 888 m
3450 888 l
3450 0 l
0 0 l
h
0 888 m
W*
1005 447 m
1005 479.00015 1010.6249 510.87485 1021.875 542.625 c
1033.125 574.37518 1049.4999 602.74988 1071 627.75 c
1092.5001 652.75012 1118.9999 673.12494 1150.5 688.875 c
1182.0001 704.62506 1217.7498 712.5 1257.75 712.5 c
1305.2502 712.5 1345.7499 701.75012 1379.25 680.25 c
1412.7501 658.74988 1437.7499 630.75018 1454.25 596.25 c
1412.25 570.75 l
1403.75 588.25006 1393.5 602.99994 1381.5 615 c
1369.5 627.00006 1356.5001 636.74994 1342.5 644.25 c
1328.4999 651.75006 1314.0001 657.125 1299 660.375 c
1283.9999 663.625 1269.2501 665.25 1254.75 665.25 c
1222.7499 665.25 1194.5001 658.75006 1170 645.75 c
1145.4999 632.74994 1124.8751 615.75012 1108.125 594.75 c
1091.3749 573.74988 1078.75 550.12512 1070.25 523.875 c
1061.75 497.62488 1057.5 471.00012 1057.5 444 c
1057.5 414.49985 1062.625 386.25012 1072.875 359.25 c
1083.125 332.24988 1097.1249 308.37509 1114.875 287.625 c
1132.6251 266.87491 1153.6249 250.37506 1177.875 238.125 c
1202.1251 225.87494 1228.4999 219.75 1257 219.75 c
1272.0001 219.75 1287.3749 221.62498 1303.125 225.375 c
1318.8751 229.12502 1334.1249 235.12495 1348.875 243.375 c
1363.6251 251.62505 1377.2499 261.87494 1389.75 274.125 c
1402.2501 286.37506 1412.75 301.24991 1421.25 318.75 c
1464.75 296.25 l
1456.25 276.24991 1444.2501 258.62506 1428.75 243.375 c
1413.2499 228.12492 1396.0001 215.25005 1377 204.75 c
1357.9999 194.24995 1337.8751 186.25003 1316.625 180.75 c
1295.3749 175.24997 1274.5001 172.5 1254 172.5 c
1217.4999 172.5 1184.0001 180.49992 1153.5 196.5 c
1122.9999 212.50008 1096.7501 233.37488 1074.75 259.125 c
1052.7499 284.87512 1035.6251 314.12485 1023.375 346.875 c
1011.1249 379.62515 1005 412.99982 1005 447 c
1005 447 l
h
1647 169.5 m
1626.9999 169.5 1608.7501 172.62497 1592.25 178.875 c
1575.7499 185.12503 1561.625 193.74994 1549.875 204.75 c
1538.125 215.75006 1529 228.49992 1522.5 243 c
1516 257.50006 1512.75 272.74991 1512.75 288.75 c
1512.75 306.75009 1516.75 323.12494 1524.75 337.875 c
1532.75 352.62506 1543.9999 365.24994 1558.5 375.75 c
1573.0001 386.25006 1590.3749 394.37497 1610.625 400.125 c
1630.8751 405.87503 1653.2499 408.75 1677.75 408.75 c
1697.2501 408.75 1717.2499 407.00003 1737.75 403.5 c
1758.2501 399.99997 1776.4999 395.00003 1792.5 388.5 c
1792.5 423.75 l
1792.5 458.25018 1782.6251 485.62491 1762.875 505.875 c
1743.1249 526.12512 1716.5001 536.25 1683 536.25 c
1661.9999 536.25 1641.1251 532.25006 1620.375 524.25 c
1599.6249 516.24994 1578.5001 504.75006 1557 489.75 c
1539 523.5 l
1564.5001 540.50006 1589.2499 553.24994 1613.25 561.75 c
1637.2501 570.25006 1662.2499 574.5 1688.25 574.5 c
1735.7502 574.5 1773.4999 560.75012 1801.5 533.25 c
1829.5001 505.74985 1843.5 467.75024 1843.5 419.25 c
1843.5 243 l
1843.5 228.99992 1849.5 222 1861.5 222 c
1861.5 177 l
1857.5 176.5 1853.75 176.125 1850.25 175.875 c
1846.75 175.625 1843.75 175.5 1841.25 175.5 c
1831.25 175.5 1822.125 178.49997 1813.875 184.5 c
1805.625 190.50003 1801 199.49994 1800 211.5 c
1798.5 242.25 l
1781.4999 219.24988 1759.1251 201.37506 1731.375 188.625 c
1703.6249 175.87494 1675.5001 169.5 1647 169.5 c
1647 169.5 l
h
1659.75 208.5 m
1682.2501 208.5 1704.6249 213.37495 1726.875 223.125 c
1749.1251 232.87505 1766.7499 246.24991 1779.75 263.25 c
1783.25 267.75003 1786.25 272.62497 1788.75 277.875 c
1791.25 283.12503 1792.5 287.99997 1792.5 292.5 c
1792.5 356.25 l
1775.4999 362.75003 1757.7501 367.74997 1739.25 371.25 c
1720.7499 374.75003 1702.7501 376.5 1685.25 376.5 c
1648.7499 376.5 1619.1251 369.12506 1596.375 354.375 c
1573.6249 339.62494 1562.25 319.25012 1562.25 293.25 c
1562.25 282.74994 1564.25 272.50006 1568.25 262.5 c
1572.25 252.49995 1578.375 243.50005 1586.625 235.5 c
1594.875 227.49995 1605 221.00003 1617 216 c
1629 210.99997 1643.2499 208.5 1659.75 208.5 c
1659.75 208.5 l
h
1929 373.5 m
1929 401.00015 1933.75 426.99988 1943.25 451.5 c
1952.75 476.00012 1966.1249 497.37491 1983.375 515.625 c
2000.6251 533.87506 2021.2499 548.24994 2045.25 558.75 c
2069.25 569.25006 2095.7498 574.5 2124.75 574.5 c
2161.7502 574.5 2193.9998 566.12506 2221.5 549.375 c
2249.0002 532.62494 2269.75 510.00015 2283.75 481.5 c
2234.25 465.75 l
2223.25 485.75009 2208 501.37494 2188.5 512.625 c
2169 523.87506 2147.25 529.5 2123.25 529.5 c
2103.25 529.5 2084.625 525.50006 2067.375 517.5 c
2050.125 509.49997 2035.1251 498.62506 2022.375 484.875 c
2009.6249 471.12494 1999.625 454.75009 1992.375 435.75 c
1985.125 416.74991 1981.5 396.00012 1981.5 373.5 c
1981.5 351.49988 1985.25 330.75009 1992.75 311.25 c
2000.25 291.74991 2010.4999 274.87506 2023.5 260.625 c
2036.5001 246.37492 2051.625 235.12505 2068.875 226.875 c
2086.125 218.62495 2104.5 214.5 2124 214.5 c
2136.5 214.5 2148.875 216.24998 2161.125 219.75 c
2173.375 223.25002 2184.75 228.12497 2195.25 234.375 c
2205.75 240.62503 2214.75 247.74995 2222.25 255.75 c
2229.75 263.75003 2235 272.24997 2238 281.25 c
2287.5 266.25 l
2282 252.24992 2274 239.37506 2263.5 227.625 c
2253 215.87494 2240.625 205.62505 2226.375 196.875 c
2212.125 188.12495 2196.375 181.37503 2179.125 176.625 c
2161.875 171.87497 2144 169.5 2125.5 169.5 c
2096.9998 169.5 2070.75 174.87494 2046.75 185.625 c
2022.7499 196.37506 2002.0001 211.12491 1984.5 229.875 c
1966.9999 248.62509 1953.375 270.24988 1943.625 294.75 c
1933.875 319.25012 1929 345.49985 1929 373.5 c
1929 373.5 l
h
2695.5 177 m
2644.5 177 l
2644.5 395.25 l
2644.5 439.75021 2636.875 472.99988 2621.625 495 c
2606.375 517.00012 2584.0002 528 2554.5 528 c
2540 528 2525.625 525.125 2511.375 519.375 c
2497.125 513.625 2483.75 505.75006 2471.25 495.75 c
2458.75 485.74994 2447.875 474.00006 2438.625 460.5 c
2429.375 446.99994 2422.5 432.25009 2418 416.25 c
2418 177 l
2367 177 l
2367 724.5 l
2418 724.5 l
2418 479.25 l
2434 508.75015 2455.7498 531.99994 2483.25 549 c
2510.7502 566.00006 2540.2498 574.5 2571.75 574.5 c
2594.25 574.5 2613.375 570.37506 2629.125 562.125 c
2644.875 553.87494 2657.625 542.37506 2667.375 527.625 c
2677.125 512.87494 2684.25 495.12509 2688.75 474.375 c
2693.25 453.62491 2695.5 430.75012 2695.5 405.75 c
2695.5 177 l
h
2972.25 169.5 m
2943.7498 169.5 2917.5 174.87494 2893.5 185.625 c
2869.5 196.37506 2848.75 211.12491 2831.25 229.875 c
2813.75 248.62509 2800.125 270.24988 2790.375 294.75 c
2780.625 319.25012 2775.75 345.49985 2775.75 373.5 c
2775.75 401.00015 2780.625 426.87488 2790.375 451.125 c
2800.125 475.37512 2813.75 496.62491 2831.25 514.875 c
2848.75 533.12506 2869.375 547.62494 2893.125 558.375 c
2916.875 569.12506 2942.9998 574.5 2971.5 574.5 c
3000.0002 574.5 3026.125 569.12506 3049.875 558.375 c
3073.625 547.62494 3094 533.00012 3111 514.5 c
3128 495.99991 3141.25 474.75012 3150.75 450.75 c
3160.25 426.74988 3165 401.25012 3165 374.25 c
3165 370.24997 3164.875 366.25003 3164.625 362.25 c
3164.375 358.24997 3164 355.5 3163.5 354 c
2829.75 354 l
2831.25 332.99991 2836.125 313.62509 2844.375 295.875 c
2852.625 278.12491 2863.125 262.75006 2875.875 249.75 c
2888.625 236.74994 2903.375 226.62503 2920.125 219.375 c
2936.875 212.12497 2954.75 208.5 2973.75 208.5 c
2986.75 208.5 2999.5 210.24998 3012 213.75 c
3024.5 217.25002 3036 221.99997 3046.5 228 c
3057 234.00003 3066.375 241.37495 3074.625 250.125 c
3082.875 258.87503 3089.25 268.49994 3093.75 279 c
3138 267 l
3132 252.49992 3123.5 239.37506 3112.5 227.625 c
3101.5 215.87494 3088.75 205.62505 3074.25 196.875 c
3059.75 188.12495 3043.75 181.37503 3026.25 176.625 c
3008.75 171.87497 2990.75 169.5 2972.25 169.5 c
2972.25 169.5 l
h
3116.25 393 m
3114.75 414.00009 3109.875 433.12491 3101.625 450.375 c
3093.375 467.62509 3082.875 482.49994 3070.125 495 c
3057.375 507.50006 3042.5 517.24994 3025.5 524.25 c
3008.5 531.25006 2990.5 534.75 2971.5 534.75 c
2952.5 534.75 2934.5 531.25006 2917.5 524.25 c
2900.5 517.24994 2885.625 507.50006 2872.875 495 c
2860.125 482.49994 2849.875 467.50009 2842.125 450 c
2834.375 432.49991 2829.75 413.50009 2828.25 393 c
3116.25 393 l
h
3426.75 195.75 m
3423.75 194.25 3419.375 192.25002 3413.625 189.75 c
3407.875 187.24998 3401.25 184.75002 3393.75 182.25 c
3386.25 179.74998 3377.75 177.50002 3368.25 175.5 c
3358.75 173.49998 3348.75 172.5 3338.25 172.5 c
3327.25 172.5 3316.75 173.99998 3306.75 177 c
3296.75 180.00002 3288 184.62497 3280.5 190.875 c
3273 197.12503 3267 204.99995 3262.5 214.5 c
3258 224.00005 3255.75 234.99994 3255.75 247.5 c
3255.75 527.25 l
3201.75 527.25 l
3201.75 567.75 l
3255.75 567.75 l
3255.75 699.75 l
3306.75 699.75 l
3306.75 567.75 l
3396.75 567.75 l
3396.75 527.25 l
3306.75 527.25 l
3306.75 261.75 l
3307.75 247.24992 3312.75 236.62503 3321.75 229.875 c
3330.75 223.12497 3341.5 219.75 3354 219.75 c
3368.5 219.75 3381.25 222.12497 3392.25 226.875 c
3403.25 231.62503 3410.25 234.99998 3413.25 237 c
3426.75 195.75 l
h
3426.75 195.75 m
W*
0 0 3450 888 rc
990 739.5 m
3441.75 739.5 l
3441.75 154.5 l
990 154.5 l
h
f
ep
end
%%Trailer
%%EOF
